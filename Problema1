#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <stdbool.h>
#include <ctype.h>
#define MAX_LUNA 12
#define MAX_ANUL 2025

struct Cartof
{
    char date[12];
    unsigned long long int id;
    char *product_name;
    char *product_category;
    char *product_subcategory;
    double unit_price;
    const unsigned int quantity_sold;
    char *sale_country;
    char *sale_city;
    struct Cartof *next;
};
typedef struct Cartof Unit;
Unit *head = NULL;
int anul_luna[MAX_ANUL][MAX_LUNA + 1];

void Read_file();
void free_list();
void Show_menu();
void show_profit_per_month_every_year();
int main()
{
    int choice;
    do{
    Read_file();
    Show_menu();
    // scanf("%d",&choice);
    show_profit_per_month_every_year();
    // printf("Program executed with code 0!\n");
    }while(choice);
    return 0;
 
}


void Read_file()
{

    FILE *file = fopen("C:\\Users\\chicu\\OneDrive\\Desktop\\printare.txt", "r");

    if (file == NULL)
    {
        printf("Nu sa putut deschide fisierul\n");
        exit(-1);
    }

    while (!feof(file))
    {
        
        char temp_product_name[100];
        char temp_product_category[100];
        char temp_product_subcategory[100];
        char temp_sale_country[100];
        char temp_sale_city[100];
        char temp_date[12];

        Unit *temp = (Unit *)malloc(sizeof(Unit));
        
        fscanf(file, "%[^,],%llu,%[^,],%[^,],%[^,],%lf,%d,%[^,],%[^\n]",
               temp_date,
               &temp->id,
               temp_product_name,
               temp_product_category,
               temp_product_subcategory,
               &temp->unit_price,
               &temp->quantity_sold,
               temp_sale_country,
               temp_sale_city);

        int year,month;
               if (sscanf(temp_date, "%d-%d",&year,&month) == 2){
        anul_luna[year][month] += temp->quantity_sold * temp->unit_price;

    }

        strcpy(temp->date,temp_date);
        temp->product_name = strdup(temp_product_name);
        temp->product_category = strdup(temp_product_category);
        temp->product_subcategory = strdup(temp_product_subcategory);
        temp->sale_country = strdup(temp_sale_country);
        temp->sale_city = strdup(temp_sale_city);
        temp->next = NULL;

        if (head == NULL)
        {
            head = temp;
        }
        else
        {
            Unit *temp1 = head;
            while (temp1->next != NULL)
            {
                temp1 = temp1->next;
            }

            temp1->next = temp;
        }
    }

    fclose(file);
        // printf("\nSalut\n");
}

void free_list()
{
    Unit *temp_head = head;
    while (temp_head != NULL)
    {
        Unit *temp = temp_head;
        temp_head = temp_head->next;
        free(temp->product_name);
        free(temp->product_category);
        free(temp->product_subcategory);
        free(temp->sale_country);
        free(temp->sale_city);
        free(temp);
    }
}

void show_profit_per_month_every_year(){
    int anul,luna;

    printf("alege anul\n");
    scanf("%d",&anul);
    printf("alege luna\n");
    scanf("%d",&luna);

    int pret = anul_luna[anul][luna];

    printf("Profitul in anul %d in luna %d a fost: %d\n",anul,luna,pret);
}

void Show_menu(){
    printf("\nAlegeti o optiune:\n");
    printf("1. Afisare fiecare profit per an per luna\n");
}
